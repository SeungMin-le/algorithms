#include <stdio.h>
#include<String.h>
#include<stdlib.h>

/*push X : 정수 X를 큐에 넣는 연산이다.
pop : 큐에서 가장 앞에 있는 정수를 빼고, 그 수를 출력한다.만약 큐에 들어있는 정수가 없는 경우에는 - 1을 출력한다.
size : 큐에 들어있는 정수의 개수를 출력한다.
empty : 큐가 비어있으면 1, 아니면 0을 출력한다.
front : 큐의 가장 앞에 있는 정수를 출력한다.만약 큐에 들어있는 정수가 없는 경우에는 - 1을 출력한다.
back : 큐의 가장 뒤에 있는 정수를 출력한다.만약 큐에 들어있는 정수가 없는 경우에는 - 1을 출력한다.*/

void push(int* arr, int x,int size) {
	
	
	arr[size-1] = x;
}
void print(int* arr,int size) {
	for (int i = 0; i < size; i++) {
		printf("%d ",arr[i]);
	}
	printf("\n");
	
}
void  sizeplus(int* arrSize, int* arr) {
	int* temp;
	int newSize;
	newSize = *arrSize + 1;
	temp = (int*)malloc(sizeof(int) * newSize);
	for (int i = 0; i < *arrSize; i++) {
		temp[i] = arr[i];
	}
	free(arr);
	arr = temp;
	*arrSize = newSize;
	
}
int main() {
	int x;
	int num = 0;
	int arrSize=0;
	int* arr;
	
	arr = (int*)malloc(sizeof(int) * arrSize);
	while (num != 8) {
		printf("1.push\n2.pop\n3.size\n4.empty\n5.front\n6.back\n7.print\n8.exit\n");
		scanf_s("%d", &num);

		if (num == 1) {
			sizeplus(&arrSize,arr);
			printf("push할 수를 입력하세요: ");
			scanf_s("%d",&x);
		
			push(arr, x,arrSize);
		}
		else if (num == 7) {
			print(arr,arrSize);
		}
		
	}
	free(arr);
	

	return 0;
}

